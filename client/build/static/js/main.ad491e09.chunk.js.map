{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","name","handleChange","target","value","setState","createAndDownloadPdf","axios","post","then","get","responseType","res","pdfBlob","Blob","data","type","saveAs","className","placeholder","onChange","this","onClick","class","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QA+BeA,E,4MAzBbC,MAAQ,CACNC,KAAM,iB,EAGTC,aAAe,oBAAGC,OAAUC,EAAb,EAAaA,MAAOH,EAApB,EAAoBA,KAApB,OAAiC,EAAKI,SAAL,eAAiBJ,EAAOG,K,EACxEE,qBAAuB,WACtBC,IAAMC,KAAK,cAAe,EAAKR,OAC9BS,MAAK,kBAAMF,IAAMG,IAAI,aAAc,CAAEC,aAAc,YACnDF,MAAK,SAACG,GACL,IAAMC,EAAU,IAAIC,KAAK,CAACF,EAAIG,MAAO,CAAEC,KAAM,oBAC7CC,iBAAOJ,EAAS,6B,4CAIlB,WACA,OACE,sBAAKK,UAAU,MAAf,UACE,iEACA,uBAAOF,KAAK,OAAOG,YAAY,OAAOlB,KAAK,OAAOmB,SAAUC,KAAKnB,eACjE,yBAAQgB,UAAU,MAAMI,QAASD,KAAKf,qBAAtC,UAA4D,mBAAGiB,MAAM,mBAArE,yB,GApBYC,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ad491e09.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { saveAs } from 'file-saver';\nimport './App.css'\n\nclass App extends React.Component{\n  state = {\n    name: 'Manawar Iqbal',\n    \n }\n handleChange = ({ target: { value, name } }) => this.setState({ [name]: value });\n createAndDownloadPdf = () => {\n  axios.post('/create-pdf', this.state)\n  .then(() => axios.get('/fetch-pdf', { responseType: 'blob' }))\n  .then((res) => { \n    const pdfBlob = new Blob([res.data], { type: 'application/pdf' })\n    saveAs(pdfBlob, 'generatedDocument.pdf')\n  })\n  \n}\n  render(){\n  return (\n    <div className=\"App\">\n      <h2>Enter your name to generate pdf</h2>\n      <input type=\"text\" placeholder=\"Name\" name=\"name\" onChange={this.handleChange}/>\n      <button className=\"btn\" onClick={this.createAndDownloadPdf}><i class=\"fa fa-download\"></i>Download PDF</button>\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}